{
  "users": [
    {
      "id": "47fb03a6-b770-4e64-a533-e507cfa49020",
      "githubId": "viktorsipach",
      "roles": [
        "author",
        "student",
        "supervisor",
        "course_manager"
      ]
    },
    {
      "id": "4dc0685c-df82-4db1-8d5b-ac31f954434e",
      "githubId": "KatiaR",
      "roles": []
    },
    {
      "id": "f8044829-0a33-4c68-81eb-7849a0cb0e18",
      "githubId": "YekaterinaKarakulina",
      "roles": [
        "author",
        "student",
        "supervisor",
        "course_manager"
      ]
    },
    {
      "id": "dc79022b-80b5-4200-bcd3-a739923818a3",
      "githubId": "PavelZaharov1987",
      "roles": [
        "author",
        "student"
      ]
    },
    {
      "id": "59b7f101-3462-4cd2-a418-e210f4fb8149",
      "githubId": "Ghuseynova",
      "roles": [
        "author"
      ]
    },
    {
      "id": "b08a13d8-5df2-4953-be60-0ed72617c58f",
      "githubId": "Kipris",
      "roles": [
        "author",
        "student",
        "supervisor",
        "course_manager"
      ]
    }
  ],
  "tasks": [
    {
      "taskScore": 100,
      "title": "Task 1",
      "state": "draft",
      "author": "viktorsipach",
      "description": "Task 1 description",
      "items": [
        {
          "id": "task-1-bp1",
          "title": "basic_p1",
          "category": "basic",
          "score": "10",
          "description": "basic_p1 - You need to do some things",
          "mentorCheck": true
        },
        {
          "id": "task-1-bp2",
          "title": "basic_p2",
          "category": "basic",
          "score": "20",
          "description": "basic_p2 - You need to do some things",
          "mentorCheck": false
        },
        {
          "id": "task-1-ep1",
          "title": "extra_p1",
          "category": "extra",
          "score": "30",
          "description": "extra_p1 - You need to do some things",
          "mentorCheck": true
        },
        {
          "id": "task-1-ep2",
          "title": "extra_p2",
          "category": "extra",
          "score": "50",
          "description": "extra_p2 - You need to do some things",
          "mentorCheck": false
        },
        {
          "id": "task-1-fp1",
          "title": "fines_p1",
          "category": "fines",
          "score": "10",
          "description": "fines_p1 - You need to do some things",
          "mentorCheck": true
        },
        {
          "id": "task-1-fp2",
          "title": "fines_p2",
          "category": "fines",
          "score": "10",
          "description": "fines_p2 - You need to do some things",
          "mentorCheck": false
        }
      ],
      "taskId": "task-1",
      "id": "task-1"
    },
    {
      "taskScore": 100,
      "title": "Task 2",
      "state": "closed",
      "author": "KatiaR",
      "description": "Task 2 description",
      "items": [
        {
          "id": "task-2-bp1",
          "title": "basic_p1",
          "category": "basic",
          "score": "10",
          "description": "basic_p1 - You need to do some things",
          "mentorCheck": true
        },
        {
          "id": "task-2-ep1",
          "title": "extra_p1",
          "category": "extra",
          "score": "30",
          "description": "extra_p1 - You need to do some things",
          "mentorCheck": true
        },
        {
          "id": "task-2-fp1",
          "title": "fines_p1",
          "category": "fines",
          "score": "10",
          "description": "fines_p1 - You need to do some things",
          "mentorCheck": true
        }
      ],
      "taskId": "task-2",
      "id": "task-2"
    },
    {
      "taskScore": 100,
      "title": "Task 3",
      "state": "open",
      "author": "YekaterinaKarakulina",
      "description": "Task 3 description",
      "items": [
        {
          "id": "task-3-bp1",
          "title": "basic_p1",
          "category": "basic",
          "score": "10",
          "description": "basic_p1 - You need to do some things",
          "mentorCheck": true
        },
        {
          "id": "task-3-ep1",
          "title": "extra_p1",
          "category": "extra",
          "score": "30",
          "description": "extra_p1 - You need to do some things",
          "mentorCheck": true
        },
        {
          "id": "task-3-fp1",
          "title": "fines_p1",
          "category": "fines",
          "score": "10",
          "description": "fines_p1 - You need to do some things",
          "mentorCheck": true
        }
      ],
      "taskId": "task-3",
      "id": "task-3"
    },
    {
      "taskScore": 100,
      "title": "Task 4",
      "state": "archived",
      "author": "author4",
      "description": "Task 4 description",
      "items": [
        {
          "id": "task-4-bp1",
          "title": "basic_p1",
          "category": "basic",
          "score": "10",
          "description": "basic_p1 - You need to do some things",
          "mentorCheck": true
        },
        {
          "id": "task-4-ep1",
          "title": "extra_p1",
          "category": "extra",
          "score": "30",
          "description": "extra_p1 - You need to do some things",
          "mentorCheck": true
        },
        {
          "id": "task-4-fp1",
          "title": "fines_p1",
          "category": "fines",
          "score": "20",
          "description": "fines_p1 - You need to do some things",
          "mentorCheck": true
        }
      ],
      "taskId": "task-4",
      "id": "task-4"
    },
    {
      "taskScore": 610,
      "title": "1ew",
      "state": "open",
      "author": "Artёm Sinicyn",
      "description": "Цели задания\nРазработать инструмент, который может использоваться тысячами реальных пользователей.\nПомочь будущим поколениям студентов и менторов школы Rolling Scopes.\nПолучить опыт командной работы близкий к условиям реальных проектов.\nУкрасить CV ссылкой на качественное приложение.\nПосле оценки работ мы (организаторы и студенты) выберем решение, которое будет интегрировано в RS App. Решения будут оцениваться по следующим критериям:\n\nСогласие команды на использование их кода.\nКачество кода и реализации.\nСхожесть дизайна и набора технологий с RS App.\nГотовность команды работать над интеграцией решения в RS App.\nОсобенности задания\nРабота ведётся в группах. Описание процесса командной работы\nДля проверки и оценки решений проводится кросс-чек.\nИнформацию, которую команда хочет донести до проверяющих необходимо поместить в README репозитория.\nТехнические требования\nНужно использовать\nReact\nМожно использовать\nRedux.\nCreate React App\nTypeScript, Next.js, Ant Design - для более простой интеграции решения в RS App\nВсё остальное\nМожно не использовать\nХуки. Правда, можно и без них.\nСервер\nВ качестве сервера рекомендуется использовать json-server. Это будет достаточным приближением к реальному Rest API.\n\nДля удобства командной работы можно коммитить исходный файл (db.json). Но будьте внимательны и не добавляйте в коммиты нежелательные изменения (не делайте git add .).\n\nВ продакшн сборке не будет локального json-server, поэтому каждая команда должна задеплоить свой json-server на какой-нибудь хостинг, например - heroku.\n\nМожно использовать не json-server, а любую другой способ реализации Rest API. Если не используется сервер, а например локальная эмуляция с localStorage, то оценка будет ниже (см. критерии оценки).\n\nФункциональные требования\nПриложению нужна аутентификация, но форму логина можно сделать упрощённой - с обязательным вводом только логина (githubId). Наличие поля для ввода пароля - на ваше усмотрение, но тогда нужна и упрощённая регистрация. У пользователя также должна быть одна или несколько ролей. Роли выбираются при логине или регистрации (если она есть).\n\nЗадание создаётся пользователем (автором) в виде списка оцениваемых требований. Каждое требование обязательно содержит название и максимальную оценку. Для удобства можно сделать отдельное текстовое описание.\n\nЧтобы создать запрос на оценку, студент выбирает задачу и указывает ссылку на решение и на pull request.\n\nПеред тем как запрос становится доступен для проверяющих, студент должен выполнить самопроверку.\n\nПри самопроверке студент ставит оценку по каждому пункту от 0 до максимума. Для каждого пункта можно оставить комментарий, например, пояснить каким образом было реализовано требование.\n\nПри проверке чужой работы процедура та же, но проверяющий видит оценки и комментарии из самопроверки. Для удобства можно заполнять форму оценками из самопроверки, чтобы проверяющий менял только те оценки, с которыми не согласен.\n\nПосле того как проверяющий опубликовал свою проверку, она становится доступна для просмотра студенту. Если студент не согласен с оценкой по каким-то пунктам, он может оспорить каждый пункт в отдельности. Проверяющий может изменить оценку или оставить как есть.\n\nМожно организовывать сессии кросс-чека как в последних наборах RS School. При этом сохраняется возможность создания запроса на проверку вне сессии.\n\nКросс-чек сессия проходит несколько стадий:\n\nСбор запросов на оценку.\nПроверка работ случайно выбранными участниками сессии.\nВыставление итоговой оценки по результатам проверок.\nЕсли для стадий кросс-чек сессии можно указать дедлайны, то они носят информативный характер и переключение между стадиями производятся пользователем.\n\nСущности и состояния\nНиже следует пример того, как могли бы выглядеть сущности в приложении. Ваше приложение может использовать как точно такие же структуры, так и совершенно другие. Скорее всего, список неполный и понадобятся ещё вспомогательные сущности. Набор полей точно не исчерпывающий, например не описана структура для финальных оценок после кросс-чека.\n\nconst user = {\n  githubId: \"torvalds\",\n  roles: [\"author\", \"student\", \"supervisor\", \"course_manager\"]\n};\n\nconst task = {\n  id: \"simple-task-v1\",\n  author: \"cardamo\",\n  state: \"DRAFT\", // enum [DRAFT, PUBLISHED, ARCHIVED]\n  categoriesOrder: [\"Basic Scope\", \"Extra Scope\", \"Fines\"],\n  items: [\n    {\n      id: \"basic_p1\",\n      minScore: 0,\n      maxScore: 20,\n      category: \"Basic Scope\",\n      title: \"Basic things\",\n      description: \"You need to make things right, not wrong\"\n    },\n    {\n      id: \"extra_p1\",\n      minScore: 0,\n      maxScore: 30,\n      category: \"Extra Scope\",\n      title: \"More awesome things\",\n      description: \"Be creative and make up some more awesome things\"\n    },\n    {\n      id: \"fines_p1\",\n      minScore: -10,\n      maxScore: 0,\n      category: \"Fines\",\n      title: \"App crashes\",\n      description: \"App causes BSoD!\"\n    }\n  ]\n};\n\nconst taskScore = {\n  task: \"simple-task-v1\",\n  items: {\n    basic_p1: {score: 20, comment: \"Well done!\"},\n    extra_p1: {score: 15, comment: \"Some things are done, some are not\"},\n    fines_p1: {score: 0, comment: \"No ticket today\"},\n  }\n};\n\nconst crossCheckSession = {\n  id: \"rss2020Q3react-xcheck\",\n  state: \"DRAFT\", // enum [DRAFT, REQUESTS_GATHERING, CROSS_CHECK, COMPLETED]\n  taskId: \"simple-task-v1\",\n  coefficient: 0.7,\n  startDate: \"2020-07-07\", \n  endDate: \"2020-07-14\",\n  discardMinScore: true,  # ignore the review with minimal score when calculating average\n  discardMaxScore: false, # similar to discardMinScore\n  minReiewsAmount: 1, // how many peer reviews are required to set a score\n  desiredReviewersAmount: 2, // how many peers are assigned to evaluate each solution\n  attendees: [ // shuffled randomly when state is cahnged from REQUESTS_GATHERING to CROSS_CHECL\n    {githubId: \"ButterBrot777\", reviewerOf: [\"torvalds\", \"cardamo\"]},\n    {githubId: \"torvalds\", reviewerOf: [\"cardamo\"]},\n    {githubId: \"cardamo\", reviewerOf: [\"ButterBrot777\"]}\n  ]\n}\n\nconst reviewRequest = {\n  id: \"rev-req-1\",\n  crossCheckSessionId: \"rss2020Q3react-xcheck\", // may be null if this review is not a part of any session \n  author: \"cardamo\",\n  task: \"simple-task-v1\",\n  state: \"PUBLISHED\", // enum [DRAFT, PUBLISHED, COMPLETED]\n  selfGrade: { /* embedded `taskScore` object */ }\n};\n\nconst review = {\n  id: \"rev-id-1\",\n  requestId: \"rev-req-1\",\n  author: \"ButterBrot777\",\n  state: \"DISPUTED\", // enum [DRAFT, PUBLISHED, DISPUTED, ACCEPTED, REJECTED],\n  grade: { /* embedded `taskScore` object */ }\n};\n\nconst dispute = {\n  reviewId: \"rev-id-1\",\n  state: \"ONGOING\", // enum [ONGOING, ACCEPTED, REJECTED]\n  idem: \"extra_p1\",\n  comment: \"Check out the 'All things' page to see all things that were implemented\",\n  suggestedScore: 30\n};\nДемо\nЕго нет! Вы создаёте уникальное приложение, общеизвестных аналогов которому не существует. Если подобное приложение вам попадалось - просьба отправить ссылку @cardamo.",
      "items": [
        {
          "title": "Базовая функциональность",
          "category": "basic",
          "score": 140,
          "description": "Упрощённая страница/окно авторизации. +10\nСтраница со списком задач (tasks). +10\nФорма (на отдельной странице или в окне) создания и редактирования задачи. +20\nСтраница со списком запросов на проверку (review requests). +10\nСписок запросов на проверку можно сортировать и фильтровать по заданию, выполнившему студенту и статусу. +10\nФорма создания запроса на проверку. +10\nФорма проверки и самопроверки задания. +20\nСтраница со списком оценок работ (reviews). +10\nСписок оценок можно сортировать по всем полям/колонкам, где сортировка применима. +10\nСписок оценок можно фильтровать по заданию, выполнившему студенту и проверяющему. Есть . +10\nСтраница или окно с деталями оценки одного проверяющего. +10\nГлавная страница со ссылками на остальные доступные страницы ИЛИ всегда видимое меню для навигации. +10",
          "id": "Базовая функциональностьbasic",
          "mentorCheck": false
        },
        {
          "title": "Дополнительные возможности при создании задания",
          "category": "extra",
          "score": 90,
          "description": "Пометить пункт как штраф ИЛИ возможность указать минимальный балл меньше 0. +10\nПометить пункт как проверяемый только ментором (скрывать при кросс-чеке), или более сложная система ролей при проверке. +10\nОбъединение требований в категории (basic scope, advanced, etc). +10\nИмпорт пунктов и категорий в формате RSS Checklist; +10\nИмпорт пунктов и категорий в markdown формате, в котором описано большинство задач RSS. +30\nЭкспорт и импорт задания в собственном JSON формате. Побочный эффект - задание легко скопировать, оставив оригинальное без изменений. +20",
          "id": "Дополнительные возможности при создании заданияextra",
          "mentorCheck": false
        },
        {
          "title": "Дополнительные возможности при проверке задания",
          "description": "Кнопки для быстрой оценки (не выполнено - 0 баллов, выполнено частично - 50%, выполнено полностью - 100%), но остаётся возможность указать любое промежуточное значение. +10\nДать возможность проверяющему добавить ещё один пункт со штрафными или поощрительными баллами. Способы реализации могут быть различными, например можно просто дать возможность указывать не только максимальный балл за требование, но и минимальный меньше ноля. +10\nСделать поле комментария обязательным, если оценка не совпадает с самопроверкой. +10\nПромежуточное состояние проверки (и самопроверки тоже) можно сохранить, не публикуя её. +10",
          "score": 40,
          "category": "extra",
          "id": "Дополнительные возможности при проверке заданияextra",
          "mentorCheck": false
        },
        {
          "title": "Дополнительные возможности после проверки задания",
          "score": 50,
          "category": "extra",
          "description": "Возможность оставить обратную связь проверяющему - поблагодарить или пожаловаться. +10\nВозможность оспорить оценку по каждому пункту. +30\nПринять решение по оспариваемому пункту может не только проверяющий, но и пользователь со специальной ролью. +10",
          "id": "Дополнительные возможности после проверки заданияextra",
          "mentorCheck": false
        },
        {
          "title": "Кросс-чек",
          "category": "extra",
          "score": 50,
          "description": "Страница со списком кросс-чек сессий. Автор заданий (или другая роль на ваше усмотрение) может создавать и редактировать сессии. +20\nСтуденты могут создавать запросы на проверку в рамках конкретной кросс-чек сессии. +10\nАвтор задания может остановить сбор запросов на проверку в рамках кросс-чек сессии и случайным образом распределить проверяющих. +10\nАвтор задания может завершить кросс-чек сессию, после чего студент может посмотреть свою итоговую оценку. +10",
          "id": "Кросс-чекextra",
          "mentorCheck": false
        },
        {
          "title": "Дополнительная функциональность",
          "category": "extra",
          "score": 100,
          "description": "Каждое действие, меняющее данные, доступно только при наличии у пользователя соответствующей роли. Набор ролей можно взять из примера или придумать свои. +30\nПолноценная авторизация через GitHub OAuth. Для удобства проверки выбор ролей лучше оставить при логине. +20\nВ исходной базе (db.json) есть примеры сущностей каждого типа. +10\nВ исходной базе (db.json) воспроизведено задание xcheck и создан запрос на его оценку. +10 бонусных очков за стиль\nДополнительные полезные возможности, не описанные в требованиях к заданию. Для оценки должны обязательно быть описаны в README. до +30",
          "id": "Дополнительная функциональностьextra",
          "mentorCheck": false
        },
        {
          "title": "Качество кода",
          "category": "extra",
          "score": 140,
          "description": "README файл в репозитории с описанием используемых технологий, инструкцией для начала разработки и для деплоя продакшн версии. +20\nНаписаны юнит-тесты, code coverage > 50%. Способ получения coverage report описан в README. до +50\nПо названиям юнит тестов понятно, что они тестируют. Тесты не просто вызывают код, но и делают осмысленные ассерты. до +30, если code coverage меньше 50%, максимальная оценка снижается пропорционально (при 25% максимум +15 баллов).\nИспользован eslint preset (не обязательно airbnb) и нет предупреждений и ошибок. +20\nВ репозитории есть \"следы\" активной командной работы - комментарии в пулл реквестах. +10",
          "id": "Качество кодаextra",
          "mentorCheck": false
        }
      ],
      "taskId": "f30e8ef3-76a3-4f14-afaa-08904f86c229",
      "id": "RegkkLj"
    },
    {
      "taskScore": 600,
      "title": "X Check App / RS Assessment Tool",
      "state": "open",
      "author": "Artёm Sinicyn",
      "description": "Цели задания\nРазработать инструмент, который может использоваться тысячами реальных пользователей.\nПомочь будущим поколениям студентов и менторов школы Rolling Scopes.\nПолучить опыт командной работы близкий к условиям реальных проектов.\nУкрасить CV ссылкой на качественное приложение.\nПосле оценки работ мы (организаторы и студенты) выберем решение, которое будет интегрировано в RS App. Решения будут оцениваться по следующим критериям:\n\nСогласие команды на использование их кода.\nКачество кода и реализации.\nСхожесть дизайна и набора технологий с RS App.\nГотовность команды работать над интеграцией решения в RS App.\nОсобенности задания\nРабота ведётся в группах. Описание процесса командной работы\nДля проверки и оценки решений проводится кросс-чек.\nИнформацию, которую команда хочет донести до проверяющих необходимо поместить в README репозитория.\nТехнические требования\nНужно использовать\nReact\nМожно использовать\nRedux.\nCreate React App\nTypeScript, Next.js, Ant Design - для более простой интеграции решения в RS App\nВсё остальное\nМожно не использовать\nХуки. Правда, можно и без них.\nСервер\nВ качестве сервера рекомендуется использовать json-server. Это будет достаточным приближением к реальному Rest API.\n\nДля удобства командной работы можно коммитить исходный файл (db.json). Но будьте внимательны и не добавляйте в коммиты нежелательные изменения (не делайте git add .).\n\nВ продакшн сборке не будет локального json-server, поэтому каждая команда должна задеплоить свой json-server на какой-нибудь хостинг, например - heroku.\n\nМожно использовать не json-server, а любую другой способ реализации Rest API. Если не используется сервер, а например локальная эмуляция с localStorage, то оценка будет ниже (см. критерии оценки).\n\nФункциональные требования\nПриложению нужна аутентификация, но форму логина можно сделать упрощённой - с обязательным вводом только логина (githubId). Наличие поля для ввода пароля - на ваше усмотрение, но тогда нужна и упрощённая регистрация. У пользователя также должна быть одна или несколько ролей. Роли выбираются при логине или регистрации (если она есть).\n\nЗадание создаётся пользователем (автором) в виде списка оцениваемых требований. Каждое требование обязательно содержит название и максимальную оценку. Для удобства можно сделать отдельное текстовое описание.\n\nЧтобы создать запрос на оценку, студент выбирает задачу и указывает ссылку на решение и на pull request.\n\nПеред тем как запрос становится доступен для проверяющих, студент должен выполнить самопроверку.\n\nПри самопроверке студент ставит оценку по каждому пункту от 0 до максимума. Для каждого пункта можно оставить комментарий, например, пояснить каким образом было реализовано требование.\n\nПри проверке чужой работы процедура та же, но проверяющий видит оценки и комментарии из самопроверки. Для удобства можно заполнять форму оценками из самопроверки, чтобы проверяющий менял только те оценки, с которыми не согласен.\n\nПосле того как проверяющий опубликовал свою проверку, она становится доступна для просмотра студенту. Если студент не согласен с оценкой по каким-то пунктам, он может оспорить каждый пункт в отдельности. Проверяющий может изменить оценку или оставить как есть.\n\nМожно организовывать сессии кросс-чека как в последних наборах RS School. При этом сохраняется возможность создания запроса на проверку вне сессии.\n\nКросс-чек сессия проходит несколько стадий:\n\nСбор запросов на оценку.\nПроверка работ случайно выбранными участниками сессии.\nВыставление итоговой оценки по результатам проверок.\nЕсли для стадий кросс-чек сессии можно указать дедлайны, то они носят информативный характер и переключение между стадиями производятся пользователем.\n\nСущности и состояния\nНиже следует пример того, как могли бы выглядеть сущности в приложении. Ваше приложение может использовать как точно такие же структуры, так и совершенно другие. Скорее всего, список неполный и понадобятся ещё вспомогательные сущности. Набор полей точно не исчерпывающий, например не описана структура для финальных оценок после кросс-чека. Демо\nЕго нет! Вы создаёте уникальное приложение, общеизвестных аналогов которому не существует. Если подобное приложение вам попадалось - просьба отправить ссылку @cardamo.",
      "items": [
        {
          "title": "Базовая функциональность",
          "category": "basic",
          "score": 10,
          "description": "Упрощённая страница/окно авторизации",
          "id": "Базовая функциональностьbasic",
          "mentorCheck": false
        },
        {
          "category": "basic",
          "score": 10,
          "description": "Страница со списком задач (tasks)",
          "title": "Базовая функциональность",
          "id": "Базовая функциональностьbasic",
          "mentorCheck": false
        },
        {
          "score": 20,
          "description": "Форма (на отдельной странице или в окне) создания и редактирования задачи",
          "category": "basic",
          "title": "Базовая функциональность",
          "id": "Базовая функциональностьbasic",
          "mentorCheck": false
        },
        {
          "description": "Страница со списком запросов на проверку (review requests)",
          "score": 10,
          "category": "basic",
          "title": "Базовая функциональность",
          "id": "Базовая функциональностьbasic",
          "mentorCheck": false
        },
        {
          "description": "Список запросов на проверку можно сортировать и фильтровать по заданию, выполнившему студенту и статусу.",
          "score": 10,
          "category": "basic",
          "title": "Базовая функциональность",
          "id": "Базовая функциональностьbasic",
          "mentorCheck": false
        },
        {
          "title": "Базовая функциональность",
          "description": "Форма создания запроса на проверку",
          "score": 10,
          "category": "basic",
          "id": "Базовая функциональностьbasic",
          "mentorCheck": false
        },
        {
          "description": "Форма проверки и самопроверки задания.",
          "score": 20,
          "category": "basic",
          "title": "Базовая функциональность",
          "id": "Базовая функциональностьbasic",
          "mentorCheck": false
        },
        {
          "description": "Страница со списком оценок работ (reviews).",
          "score": 10,
          "category": "basic",
          "title": "Базовая функциональность",
          "id": "Базовая функциональностьbasic",
          "mentorCheck": false
        },
        {
          "description": "Список оценок можно сортировать по всем полям/колонкам, где сортировка применима. ",
          "score": 10,
          "category": "basic",
          "title": "Базовая функциональность",
          "id": "Базовая функциональностьbasic",
          "mentorCheck": false
        },
        {
          "description": "Список оценок можно фильтровать по заданию, выполнившему студенту и проверяющему. Есть . ",
          "score": 10,
          "category": "basic",
          "title": "Базовая функциональность",
          "id": "Базовая функциональностьbasic",
          "mentorCheck": false
        },
        {
          "description": "Страница или окно с деталями оценки одного проверяющего.",
          "score": 10,
          "category": "basic",
          "title": "Базовая функциональность",
          "id": "Базовая функциональностьbasic",
          "mentorCheck": false
        },
        {
          "description": "Главная страница со ссылками на остальные доступные страницы ИЛИ всегда видимое меню для навигации. ",
          "score": 10,
          "category": "basic",
          "title": "Базовая функциональность",
          "id": "Базовая функциональностьbasic",
          "mentorCheck": false
        },
        {
          "title": "Дополнительные возможности при создании задания",
          "category": "extra",
          "score": 10,
          "description": "Пометить пункт как штраф ИЛИ возможность указать минимальный балл меньше 0. ",
          "id": "Дополнительные возможности при создании заданияextra",
          "mentorCheck": false
        },
        {
          "title": "Дополнительные возможности при создании задания",
          "category": "extra",
          "score": 10,
          "description": "Пометить пункт как проверяемый только ментором (скрывать при кросс-чеке), или более сложная система ролей при проверке.",
          "id": "Дополнительные возможности при создании заданияextra",
          "mentorCheck": false
        },
        {
          "title": "Дополнительные возможности при создании задания",
          "category": "extra",
          "score": 10,
          "description": "Объединение требований в категории (basic scope, advanced, etc). ",
          "id": "Дополнительные возможности при создании заданияextra",
          "mentorCheck": false
        },
        {
          "title": "Дополнительные возможности при создании задания",
          "category": "extra",
          "score": 10,
          "description": "Импорт пунктов и категорий в формате RSS Checklist; ",
          "id": "Дополнительные возможности при создании заданияextra",
          "mentorCheck": false
        },
        {
          "title": "Дополнительные возможности при создании задания",
          "category": "extra",
          "score": 30,
          "description": "Импорт пунктов и категорий в markdown формате, в котором описано большинство задач RSS. ",
          "id": "Дополнительные возможности при создании заданияextra",
          "mentorCheck": false
        },
        {
          "title": "Дополнительные возможности при создании задания",
          "category": "extra",
          "score": 20,
          "description": "Экспорт и импорт задания в собственном JSON формате. Побочный эффект - задание легко скопировать, оставив оригинальное без изменений. ",
          "id": "Дополнительные возможности при создании заданияextra",
          "mentorCheck": false
        },
        {
          "title": "Дополнительные возможности при проверке задания ",
          "category": "extra",
          "score": 10,
          "description": "Кнопки для быстрой оценки (не выполнено - 0 баллов, выполнено частично - 50%, выполнено полностью - 100%), но остаётся возможность указать любое промежуточное значение.",
          "id": "Дополнительные возможности при проверке задания extra",
          "mentorCheck": false
        },
        {
          "title": "Дополнительные возможности при проверке задания ",
          "category": "extra",
          "score": 10,
          "description": "Дать возможность проверяющему добавить ещё один пункт со штрафными или поощрительными баллами. Способы реализации могут быть различными, например можно просто дать возможность указывать не только максимальный балл за требование, но и минимальный меньше ноля. ",
          "id": "Дополнительные возможности при проверке задания extra",
          "mentorCheck": false
        },
        {
          "title": "Дополнительные возможности при проверке задания ",
          "category": "extra",
          "score": 10,
          "description": "Сделать поле комментария обязательным, если оценка не совпадает с самопроверкой.",
          "id": "Дополнительные возможности при проверке задания extra",
          "mentorCheck": false
        },
        {
          "title": "Дополнительные возможности при проверке задания ",
          "category": "extra",
          "score": 10,
          "description": "Промежуточное состояние проверки (и самопроверки тоже) можно сохранить, не публикуя её.",
          "id": "Дополнительные возможности при проверке задания extra",
          "mentorCheck": false
        },
        {
          "title": "Дополнительные возможности после проверки задания",
          "category": "extra",
          "score": 10,
          "description": "Возможность оставить обратную связь проверяющему - поблагодарить или пожаловаться. ",
          "id": "Дополнительные возможности после проверки заданияextra",
          "mentorCheck": false
        },
        {
          "title": "Дополнительные возможности после проверки задания",
          "category": "extra",
          "score": 30,
          "description": "Возможность оспорить оценку по каждому пункту. ",
          "id": "Дополнительные возможности после проверки заданияextra",
          "mentorCheck": false
        },
        {
          "title": "Дополнительные возможности после проверки задания ",
          "score": 10,
          "description": "Принять решение по оспариваемому пункту может не только проверяющий, но и пользователь со специальной ролью.",
          "category": "extra",
          "id": "Дополнительные возможности после проверки задания extra",
          "mentorCheck": false
        },
        {
          "title": "Кросс-чек ",
          "category": "extra",
          "score": 20,
          "description": "Страница со списком кросс-чек сессий. Автор заданий (или другая роль на ваше усмотрение) может создавать и редактировать сессии. ",
          "id": "Кросс-чек extra",
          "mentorCheck": false
        },
        {
          "title": "Кросс-чек ",
          "category": "extra",
          "score": 10,
          "description": "Студенты могут создавать запросы на проверку в рамках конкретной кросс-чек сессии.",
          "id": "Кросс-чек extra",
          "mentorCheck": false
        },
        {
          "title": "Кросс-чек ",
          "category": "extra",
          "score": 10,
          "description": "Автор задания может остановить сбор запросов на проверку в рамках кросс-чек сессии и случайным образом распределить проверяющих",
          "id": "Кросс-чек extra",
          "mentorCheck": false
        },
        {
          "title": "Кросс-чек ",
          "category": "extra",
          "score": 10,
          "description": "Автор задания может завершить кросс-чек сессию, после чего студент может посмотреть свою итоговую оценку.",
          "id": "Кросс-чек extra",
          "mentorCheck": false
        },
        {
          "title": "Дополнительная функциональность",
          "category": "extra",
          "score": 30,
          "description": "Каждое действие, меняющее данные, доступно только при наличии у пользователя соответствующей роли. Набор ролей можно взять из примера или придумать свои. ",
          "id": "Дополнительная функциональностьextra",
          "mentorCheck": false
        },
        {
          "title": "Дополнительная функциональность",
          "category": "extra",
          "score": 20,
          "description": "Полноценная авторизация через GitHub OAuth. Для удобства проверки выбор ролей лучше оставить при логине. ",
          "id": "Дополнительная функциональностьextra",
          "mentorCheck": false
        },
        {
          "title": "Дополнительная функциональность",
          "category": "extra",
          "score": 10,
          "description": "В исходной базе (db.json) есть примеры сущностей каждого типа. ",
          "id": "Дополнительная функциональностьextra",
          "mentorCheck": false
        },
        {
          "title": "Дополнительная функциональность",
          "category": "extra",
          "score": 10,
          "description": "В исходной базе (db.json) воспроизведено задание xcheck и создан запрос на его оценку. ",
          "id": "Дополнительная функциональностьextra",
          "mentorCheck": false
        },
        {
          "title": "Дополнительная функциональность",
          "category": "extra",
          "score": 30,
          "description": "Дополнительные полезные возможности, не описанные в требованиях к заданию. Для оценки должны обязательно быть описаны в README.",
          "id": "Дополнительная функциональностьextra",
          "mentorCheck": false
        },
        {
          "title": "Качество кода ",
          "category": "extra",
          "score": 20,
          "description": "README файл в репозитории с описанием используемых технологий, инструкцией для начала разработки и для деплоя продакшн версии. ",
          "id": "Качество кода extra",
          "mentorCheck": false
        },
        {
          "title": "Качество кода ",
          "category": "extra",
          "score": 50,
          "description": "Написаны юнит-тесты, code coverage > 50%. Способ получения coverage report описан в README.",
          "id": "Качество кода extra",
          "mentorCheck": false
        },
        {
          "title": "Качество кода ",
          "category": "extra",
          "score": 30,
          "description": "По названиям юнит тестов понятно, что они тестируют. Тесты не просто вызывают код, но и делают осмысленные ассерты. до +30, если code coverage меньше 50%, максимальная оценка снижается пропорционально (при 25% максимум +15 баллов).",
          "id": "Качество кода extra",
          "mentorCheck": false
        },
        {
          "title": "Качество кода ",
          "category": "extra",
          "score": 20,
          "description": "Использован eslint preset (не обязательно airbnb) и нет предупреждений и ошибок. ",
          "id": "Качество кода extra",
          "mentorCheck": false
        },
        {
          "title": "Качество кода ",
          "category": "extra",
          "score": 10,
          "description": "В репозитории есть \"следы\" активной командной работы - комментарии в пулл реквестах. ",
          "id": "Качество кода extra",
          "mentorCheck": false
        }
      ],
      "taskId": "ff55f0cb-bceb-4d06-bb2d-e357e21a0284",
      "id": "0S65qPX"
    }
  ],
  "crossCheckSessions": [
    {
      "id": "xcheck-1",
      "title": "rss2020Q3react-songbird",
      "author": "viktorsipach",
      "state": "draft",
      "taskTitle": "Task 1",
      "crossCheckSessionPeriod": [
        "2020-07-08",
        "2020-07-14"
      ],
      "coefficient": 0.2,
      "discardMinScore": true,
      "discardMaxScore": true,
      "minReviewsAmount": 1,
      "desiredReviewsAmount": 2,
      "attendees": []
    },
    {
      "id": "xcheck-2",
      "title": "rss2020Q3react-xcheck",
      "author": "KatiaR",
      "state": "draft",
      "taskTitle": "Task 2",
      "crossCheckSessionPeriod": [
        "2020-09-15",
        "2020-09-17"
      ],
      "coefficient": 0.7,
      "discardMinScore": true,
      "discardMaxScore": true,
      "minReviewsAmount": 1,
      "desiredReviewsAmount": 2,
      "attendees": []
    },
    {
      "id": "xcheck-3",
      "title": "rss2020Q3react-schedule",
      "author": "YekaterinaKarakulina",
      "state": "closed",
      "taskTitle": "Task 3",
      "crossCheckSessionPeriod": [
        "2020-08-22",
        "2020-09-22"
      ],
      "coefficient": 0.7,
      "discardMinScore": true,
      "discardMaxScore": false,
      "minReviewsAmount": 1,
      "desiredReviewsAmount": 2,
      "attendees": [
        {
          "githubId": "viktorsipach",
          "reviewerOf": [
            "Kipris",
            "Ghuseynova"
          ]
        },
        {
          "githubId": "PavelZaharov1987",
          "reviewerOf": [
            "viktorsipach",
            "Ghuseynova"
          ]
        },
        {
          "githubId": "Ghuseynova",
          "reviewerOf": [
            "Kipris",
            "PavelZaharov1987"
          ]
        },
        {
          "githubId": "Kipris",
          "reviewerOf": [
            "viktorsipach",
            "PavelZaharov1987"
          ]
        }
      ]
    },
    {
      "id": "xcheck-4",
      "title": "rss2020Q3react-someApp",
      "author": "KatiaR",
      "state": "active",
      "taskTitle": "Task 3",
      "crossCheckSessionPeriod": [
        "2020-08-22",
        "2020-09-22"
      ],
      "coefficient": 0.7,
      "discardMinScore": true,
      "discardMaxScore": false,
      "minReviewsAmount": 1,
      "desiredReviewsAmount": 2,
      "attendees": []
    }
  ],
  "reviews": [
    {
      "id": "rev-id-1",
      "requestId": "rev-req-1",
      "author": "KatiaR",
      "taskTitle": "Task 1",
      "state": "published",
      "comments": [
        {
          "author": "viktorsipach",
          "avatar": "https://avatars1.githubusercontent.com/u/54073656?v=4",
          "content": "Test saga!"
        },
        {
          "author": "viktorsipach",
          "avatar": "https://avatars1.githubusercontent.com/u/54073656?v=4",
          "content": "Yes!"
        },
        {
          "author": "viktorsipach",
          "avatar": "https://avatars1.githubusercontent.com/u/54073656?v=4",
          "content": "Well done!"
        },
        {
          "author": "viktorsipach",
          "avatar": "https://avatars1.githubusercontent.com/u/54073656?v=4",
          "content": "Good!"
        }
      ],
      "grade": {
        "items": {
          "task-1-bp1": {
            "score": 15,
            "comment": "Well done!"
          },
          "task-1-ep1": {
            "score": 0,
            "comment": "Some things are done, some are not"
          },
          "task-1-fp1": {
            "score": -20,
            "comment": "No ticket today"
          }
        },
        "total": -5
      }
    },
    {
      "id": "rev-id-2",
      "requestId": "rev-req-2",
      "author": "YekaterinaKarakulina",
      "taskTitle": "Task 2",
      "state": "published",
      "comments": [
        {
          "author": "viktorsipach",
          "avatar": "https://avatars1.githubusercontent.com/u/54073656?v=4",
          "content": "Well!"
        },
        {
          "author": "viktorsipach",
          "avatar": "https://avatars1.githubusercontent.com/u/54073656?v=4",
          "content": "Good Job!"
        }
      ],
      "grade": {
        "items": {
          "task-2-bp1": {
            "score": 25,
            "comment": "Well done!"
          },
          "task-2-ep1": {
            "score": 5,
            "comment": "Some things are done, some are not"
          },
          "task-2-fp1": {
            "score": -10,
            "comment": "No ticket today"
          }
        },
        "total": 40
      }
    },
    {
      "id": "rev-id-3",
      "requestId": "rev-req-4",
      "author": "PavelZaharov1987",
      "taskTitle": "Task 3",
      "state": "draft",
      "comments": [],
      "grade": {
        "items": {
          "basic_p1": {
            "score": 25,
            "comment": "Well done!"
          },
          "extra_p1": {
            "score": 5,
            "comment": "Some things are done, some are not"
          },
          "fines_p1": {
            "score": 0,
            "comment": "No ticket today"
          }
        },
        "total": 40
      }
    },
    {
      "id": "rev-id-4",
      "requestId": "rev-req-4",
      "author": "Ghuseynova",
      "taskTitle": "Task 3",
      "state": "draft",
      "comments": [],
      "grade": {
        "items": {
          "basic_p1": {
            "score": 25,
            "comment": "Well done!"
          },
          "extra_p1": {
            "score": 10,
            "comment": "Some things are done, some are not"
          },
          "fines_p1": {
            "score": 0,
            "comment": "No ticket today"
          }
        },
        "total": 40
      }
    },
    {
      "id": "rev-id-5",
      "requestId": "rev-req-4",
      "author": "Kipris",
      "taskTitle": "Task 3",
      "state": "draft",
      "comments": [],
      "grade": {
        "items": {
          "basic_p1": {
            "score": 25,
            "comment": "Good!"
          },
          "extra_p1": {
            "score": 10,
            "comment": "Some things are done, some are not"
          },
          "fines_p1": {
            "score": -5,
            "comment": "No ticket today"
          }
        },
        "total": 40
      }
    }
  ],
  "reviewRequests": [
    {
      "id": "rev-req-2",
      "author": "KatiaR",
      "taskTitle": "Task 2",
      "state": "draft",
      "selfGrade": {},
      "linkToDemo": "#",
      "linkToPR": "#",
      "crossCheckSessionId": "xcheck-3"
    },
    {
      "id": "rev-req-3",
      "author": "KatiaR",
      "taskTitle": "Task 3",
      "state": "draft",
      "selfGrade": {},
      "linkToDemo": "#",
      "linkToPR": "#",
      "crossCheckSessionId": "xcheck-3"
    },
    {
      "id": "rev-req-4",
      "author": "viktorsipach",
      "taskTitle": "Task 3",
      "state": "readyToXCheck",
      "selfGrade": {
        "task-3-bp1": {
          "score": 20,
          "comment": "Well done!"
        },
        "task-3-ep1": {
          "score": 15,
          "comment": "Some things are done, some are not"
        },
        "task-3-fp1": {
          "score": 0,
          "comment": "No ticket today"
        }
      },
      "linkToDemo": "#",
      "linkToPR": "#",
      "crossCheckSessionId": "xcheck-3"
    },
    {
      "id": "rev-req-5",
      "author": "PavelZaharov1987",
      "taskTitle": "Task 3",
      "state": "readyToXCheck",
      "selfGrade": {
        "task-3-bp1": {
          "score": 20,
          "comment": "Well done!"
        },
        "task-3-ep1": {
          "score": 15,
          "comment": "Some things are done, some are not"
        },
        "task-3-fp1": {
          "score": 0,
          "comment": "No ticket today"
        }
      },
      "linkToDemo": "#",
      "linkToPR": "#",
      "crossCheckSessionId": "xcheck-3"
    },
    {
      "id": "rev-req-6",
      "author": "Ghuseynova",
      "taskTitle": "Task 3",
      "state": "readyToXCheck",
      "selfGrade": {
        "task-3-bp1": {
          "score": 20,
          "comment": "Well done!"
        },
        "task-3-ep1": {
          "score": 15,
          "comment": "Some things are done, some are not"
        },
        "task-3-fp1": {
          "score": 0,
          "comment": "No ticket today"
        }
      },
      "linkToDemo": "#",
      "linkToPR": "#",
      "crossCheckSessionId": "xcheck-3"
    },
    {
      "id": "rev-req-7",
      "author": "Kipris",
      "taskTitle": "Task 3",
      "state": "readyToXCheck",
      "selfGrade": {
        "task-3-bp1": {
          "score": 20,
          "comment": "Well done!"
        },
        "task-3-ep1": {
          "score": 15,
          "comment": "Some things are done, some are not"
        },
        "task-3-fp1": {
          "score": 0,
          "comment": "No ticket today"
        }
      },
      "linkToDemo": "#",
      "linkToPR": "#",
      "crossCheckSessionId": "xcheck-3"
    },
    {
      "id": "rev-req-8",
      "author": "PavelZaharov1987",
      "taskTitle": "Task 2",
      "state": "closed",
      "selfGrade": {
        "task-2-bp1": {
          "score": 20,
          "comment": "Well done!"
        },
        "task-2-ep1": {
          "score": 15,
          "comment": "Some things are done, some are not"
        },
        "task-2-fp1": {
          "score": 0,
          "comment": "No ticket today"
        }
      },
      "linkToDemo": "#",
      "linkToPR": "#",
      "crossCheckSessionId": "xcheck-3"
    },
    {
      "id": "rev-req-9",
      "author": "viktorsipach",
      "taskTitle": "Task 3",
      "state": "published",
      "selfGrade": {
        "task-3-bp1": {
          "score": 20,
          "comment": "Well done!"
        },
        "task-3-ep1": {
          "score": 15,
          "comment": "Some things are done, some are not"
        },
        "task-3-fp1": {
          "score": 0,
          "comment": "No ticket today"
        }
      },
      "linkToDemo": "#",
      "linkToPR": "#",
      "crossCheckSessionId": ""
    }
  ]
}